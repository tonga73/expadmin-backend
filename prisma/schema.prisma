generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  googleId String?
  image    String?
  verified Boolean @default(false)
  role     Role    @default(USER)

  records RecordsAndUser[]
}

enum Role {
  PART
  CLIENT
  USER
  ADMIN
}

model Record {
  id       Int      @id @default(autoincrement())
  name     String
  order    String   @unique
  code     String?
  tracing  Tracing  @default(ACEPTA_CARGO)
  priority Priority @default(NULA)
  archive  Boolean  @default(false)
  favorite Boolean  @default(false)

  users RecordsAndUser[]

  notes Note[]

  defendant  String[]
  prosecutor String[]
  insurance  String[]

  office   Office? @relation(fields: [officeId], references: [id])
  officeId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RecordsAndUser {
  record   Record @relation(fields: [recordId], references: [id])
  recordId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int

  @@id([recordId, userId])
}

model Note {
  id   Int     @id @default(autoincrement())
  name String?
  text String

  record   Record? @relation(fields: [recordId], references: [id])
  recordId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Office {
  id   Int    @id @default(autoincrement())
  name String

  records Record[]

  court   Court? @relation(fields: [courtId], references: [id])
  courtId Int?
}

model Court {
  id      Int      @id @default(autoincrement())
  name    String
  offices Office[]
  city    String?
  judge   String?
  address String?

  district   District? @relation(fields: [districtId], references: [id])
  districtId Int?
}

model District {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  courts Court[]
}

enum Tracing {
  ACEPTA_CARGO
  ACTO_PERICIAL_REALIZADO
  PERICIA_REALIZADA
  SENTENCIA_O_CONVENIO_DE_PARTES
  HONORARIOS_REGULADOS
  EN_TRATATIVA_DE_COBRO
  COBRADO
}

enum Priority {
  NULA
  BAJA
  MEDIA
  ALTA
  URGENTE
  INACTIVO
}
